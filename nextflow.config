nextflow.enable.dsl=2

manifest {
    name = 'NextLEAP'
    author = 'Kariuki Chege'
    description = 'End-to-end Lofar EoR pipeline with Nextflow'
    mainScript = 'main.nf'
    defaultBranch = 'dev'
    version = '1.0.0'
}

profiles {
    standard {

        process{
            executor = 'local'
            withLabel: parallel_jobs {
                cpus = 12
                //memory = 100.GB
                //submitRateLimit='5/60min'
            }
        }


        params {
            nextflow_executable = "/home/users/chege/mysoftware/nextflow"

            //outdir = "${launchDir}"
            logs_dir = "${launchDir}/logs"

            sim=false

            help = false
            verbose = false
        
            cluster {
                nodes = null //"150,151,152,153,154" //placeholder nodes
                slots = 4           //TODO: determine this automatically from given nodes.
                mpi = "/usr/lib64/openmpi/bin/mpirun"
                mpirun_hosts_txt_file = "${launchDir}/mpirun_hosts_list.txt"
                pssh_hosts_txt_file = "${launchDir}/pssh_hosts_list.txt" 
            }

            data {
                obsid=null
                sub_array_pointing="000"
                label= null //"R" 
                path = null
                //redshift=null //1
                //ms_files_003 = "ms_files_001.txt"
                //ms_files_002 = "ms_files_002.txt"
                //ms_files_003 = "ms_files_003.txt"
                //all_ms_files_002 = "${launchDir}/all_ms_files_002.txt"
                //all_ms_files_003 = "${launchDir}/all_ms_files_003.txt"
            }

            shapelets {
                modes = "${projectDir}/models/shapelets_modes/*modes"
            }

        }

    }

    gen002vis {

        includeConfig './configs/avgto002.config'
    }


    mpi_di {

        includeConfig './configs/mpi_di.config' 
    }

    bandpass {

        includeConfig './configs/bandpass.config' 
    }

    gen003vis {

        includeConfig './configs/avgto003.config'
    }

    mpi_dd {

        includeConfig './configs/mpi_dd.config' 
    }

    gains {
        includeConfig './configs/gains.config' 
    }

    ps {

        includeConfig './configs/pspipe.config' 
    }

    wsclean {

        includeConfig './configs/wsclean.config'
    }
    
}


dag {
    enabled = true
    overwrite=true
    file = "${params.logs_dir}/dag.png"
}

report {
    enabled = true
    overwrite=true
    file = "${params.logs_dir}/report.html"
}

timeline {
    enabled = true
    overwrite=true
    file = "${params.logs_dir}/timeline.html"
}

trace {
    enabled = true
    overwrite=true
    file = "${params.logs_dir}/trace.html"
}


//params.mode = null

//if (params.mode=="mpi"){
//    params.stage = null
//    includeConfig 'mpi_sagecal.config'
//}
//else if (params.mode=="standalone") {
//    includeConfig 'standalone_sagecal.config'
//}
